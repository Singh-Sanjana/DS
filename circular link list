#include <stdio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node* next;
};


struct Node* createNode(int value) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = value;
    newNode->next = NULL;
    return newNode;
}


void insertEnd(struct Node** head, int value) {
    struct Node* newNode = createNode(value);
    
    
    if (*head == NULL) {
        *head = newNode;
        newNode->next = *head; /
    } else {
        struct Node* temp = *head;
        
        
        while (temp->next != *head) {
            temp = temp->next;
        }
        
        
        temp->next = newNode;
        newNode->next = *head; 
    }
}


void display(struct Node* head) {
    if (head == NULL) {
        printf("List is empty.\n");
        return;
    }
    
    struct Node* temp = head;
    do {
        printf("%d -> ", temp->data);
        temp = temp->next;
    } while (temp != head); 
    printf("(head)\n");
}


int main() {
    struct Node* head = NULL;

    
    insertEnd(&head, 10);
    insertEnd(&head, 20);
    insertEnd(&head, 30);
    insertEnd(&head, 40);
    
    printf("Circular Linked List: \n");
    display(head);  

    return 0;
